version: 0.2
phases:
  install:
    commands:
    - echo Installing app dependencies...
    - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
    - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
    - source ~/.bashrc
    - echo 'Check kubectl version'
    - kubectl version --short --client
    - curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json
    - aws iam create-policy --policy-name Group2AWSLoadBalancerControllerIAMPolicy  --policy-document file://iam_policy.json
    - eksctl create iamserviceaccount --cluster=group2-capstone2-eks-cluster --namespace=kube-system --name=group2-aws-load-balancer-controller --role-name Group2AmazonEKSLoadBalancerControllerRole --attach-policy-arn=arn:aws:iam::962804699607:policy/Group2AWSLoadBalancerControllerIAMPolicy --approve
  pre_build:
    commands:
      - echo Logging into Amazon EKS...
      - aws eks --region us-east-1 update-kubeconfig --name group2-cap2-8ks-app
      - echo check config
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo logging in to AWS ECR...
      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 962804699607.dkr.ecr.us-west-2.amazonaws.com
  build:
    commands:
      - docker build -t group2-cap2-ecr-repo .
  post_build:
    commands:
      - docker tag group2-cap2-ecr-repo:latest 962804699607.dkr.ecr.us-west-2.amazonaws.com/group2-cap2-ecr-repo:latest 
      - docker push 962804699607.dkr.ecr.us-west-2.amazonaws.com/group2-cap2-ecr-repo:latest 
      - kubectl apply -f deployment.yaml
      - kubectl apply -f service.yaml
      - kubectl rollout restart -f deployment.yaml
      - kubectl get svc --all-namespaces
